<?xml version="1.0" encoding="UTF-8"?>
<!--

 CDDL HEADER START

 The contents of this file are subject to the terms of the
 Common Development and Distribution License, Version 1.0 only
 (the "License"). You may not use this file except in compliance
 with the License.

 You can obtain a copy of the license at license/ESCIDOC.LICENSE
 or http://www.escidoc.org/license.
 See the License for the specific language governing permissions
 and limitations under the License.

 When distributing Covered Code, include this CDDL HEADER in each
 file and include the License file at license/ESCIDOC.LICENSE.
 If applicable, add the following below this CDDL HEADER, with the
 fields enclosed by brackets "[]" replaced with your own identifying
 information: Portions Copyright [yyyy] [name of copyright owner]

 CDDL HEADER END


 Copyright 2006-2010 Fachinformationszentrum Karlsruhe Gesellschaft
 für wissenschaftlich-technische Information mbH and Max-Planck-
 Gesellschaft zur Förderung der Wissenschaft e.V.
 All rights reserved. Use is subject to license terms.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
		<groupId>de.mpg.escidoc.services.wildfly</groupId>
		<artifactId>pubman</artifactId>
		<version>7.11.2-SNAPSHOT</version>
		<relativePath>../../pom.xml</relativePath>
    </parent>
    <groupId>de.mpg.escidoc.services.wildfly</groupId>
    <artifactId>syndication_ear</artifactId>
    <version>1.0.83-SNAPSHOT</version>
    <name>syndication_ear</name>
    <packaging>ear</packaging>

    <scm>
        <connection>scm:git:git@github.com:MPDL-Collections/PubMan/common_services/syndication_ear</connection>
        <developerConnection>scm:git:git@github.com:MPDL-Collections/PubMan/common_services/syndication_ear</developerConnection>
        <url>https://github.com/MPDL-Collections/PubMan/</url>
    <tag>HEAD</tag>
  </scm>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ear-plugin</artifactId>
                <configuration>
                    <displayName>syndication_ears</displayName>
                    <description>syndication_ear integration testing ear</description>
                    <version>6</version>
                    <earSourceDirectory>target/classes/in_ear</earSourceDirectory>
                    <defaultLibBundleDir>lib</defaultLibBundleDir>
					<archive>
						<manifestEntries>
							<Dependencies>pubman</Dependencies>
						</manifestEntries>
					</archive>
                    <modules>
                        <ejbModule>
                            <groupId>de.mpg.escidoc.services.wildfly</groupId>
                            <artifactId>common_logic</artifactId>
                        </ejbModule>
                        <ejbModule>
                            <groupId>de.mpg.escidoc.services.wildfly</groupId>
                            <artifactId>search</artifactId>
                        </ejbModule>
                        <ejbModule>
                            <groupId>de.mpg.escidoc.services.wildfly</groupId>
                            <artifactId>structuredexportmanager</artifactId>
                        </ejbModule>
                        <ejbModule>
                            <groupId>de.mpg.escidoc.services.wildfly</groupId>
                            <artifactId>citationmanager</artifactId>
                        </ejbModule>
                        <webModule>
                            <groupId>de.mpg.escidoc.services.wildfly</groupId>
                            <artifactId>syndication_presentation</artifactId>
                            <contextRoot>/syndication</contextRoot>
                        </webModule>
                        <webModule>
                            <groupId>de.mpg.escidoc.services.wildfly</groupId>
                            <artifactId>search_presentation</artifactId>
                            <contextRoot>/search</contextRoot>
                        </webModule>
                    </modules>
                </configuration>
            </plugin>
            <!-- enables the compile test resources feature in the ear -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- wait 30 seconds before starting integration tests. Workaround for cargo-maven2-plugin until wildfly has finished deploying -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>wait-for-deployment</id>
						<phase>integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<echo message="Sleeping for 30 seconds to wait for wildfly deployment" />
								<sleep seconds="30" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <!-- disables the unittests, enables the integration tests -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                            <argLine>${jacoco.arguments.it}</argLine>
                            <test>SyndicationServiceTest</test>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- enables the process test resources feature in the ear -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testResources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
       
        <profile>
            <id>integration-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-container</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-container</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <container>
                                <containerId>wildfly8x</containerId>
                                <zipUrlInstaller>
                                    <url>${cargo.jboss.url}</url>
                                    <downloadDir>${cargo.install.dir}</downloadDir>
				    <extractDir>${cargo.install.dir}</extractDir>
                                </zipUrlInstaller>
                            </container>
                            <!-- 
                            <configuration>
                                <type>existing</type>
                                <home>${project.build.directory}/jboss/server</home>
                                <properties>
                                    <cargo.servlet.port>${cargo.port}</cargo.servlet.port>
                                    <cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>
                                    <cargo.logging>${cargo.log}</cargo.logging>
                                    <cargo.jvmargs>${cargo.jvmargs}</cargo.jvmargs>
                                    <cargo.jboss.configuration>default</cargo.jboss.configuration>
                                </properties>
                            </configuration>
                            -->
                        </configuration>
                       
                    </plugin>
                    <!-- 
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>jboss-maven-plugin</artifactId>
                        <configuration>
                            <jbossHome>${jboss.install.dir}</jbossHome>
                            <hostName>${jboss.deploy.host}</hostName>
                            <port>${jboss.deploy.port}</port>
                        </configuration>
                    </plugin>
                    -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-deployment</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
										<delete dir="${cargo.jboss.install.dir}/modules/pubman" />
										<copy overwrite="true" file="${project.build.directory}/classes/module.xml" todir="${cargo.jboss.install.dir}/modules/pubman/main" />
										<copy overwrite="true" file="${project.build.directory}/classes/pubman.properties" todir="${cargo.jboss.install.dir}/modules/pubman/main" />
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
        </dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- client communications with the server use XNIO -->
       <dependency>
           <groupId>org.jboss.xnio</groupId>
           <artifactId>xnio-api</artifactId>
           <scope>test</scope>
       </dependency>

       <dependency>
           <groupId>org.jboss.xnio</groupId>
           <artifactId>xnio-nio</artifactId>
           <scope>test</scope>
       </dependency>

       <!-- JBoss EJB client API jar.  -->
      	<dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-ejb-client</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- The client needs JBoss remoting to access the server -->
		 <dependency>
            <groupId>org.jboss.remoting</groupId>
            <artifactId>jboss-remoting</artifactId>
            <scope>test</scope>
        </dependency>
        
        <!-- Remote EJB accesses can be secured -->
        <dependency>
            <groupId>org.jboss.sasl</groupId>
            <artifactId>jboss-sasl</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- data serialization for invoking remote EJBs -->
        <dependency>
            <groupId>org.jboss.marshalling</groupId>
            <artifactId>jboss-marshalling-river</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sf.saxon</groupId>
            <artifactId>saxon</artifactId>
            <version>8.7</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
        	<groupId>commons-beanutils</groupId>
        	<artifactId>commons-beanutils</artifactId>
        </dependency>
        <dependency>
            <groupId>de.mpg.escidoc.services.wildfly</groupId>
            <artifactId>framework_access</artifactId>
            <!-- 
            <scope>compile</scope>
             -->
        </dependency>
        <dependency>
            <groupId>de.mpg.escidoc.services.wildfly</groupId>
            <artifactId>common_logic</artifactId>
            <type>ejb</type>
        </dependency>
        <dependency>
        	<groupId>de.mpg.escidoc.services.wildfly</groupId>
        	<artifactId>search_presentation</artifactId>
        	<type>war</type>
        </dependency>
        <dependency>
            <groupId>de.mpg.escidoc.services.wildfly</groupId>
            <artifactId>syndication_presentation</artifactId>
            <type>war</type>
        </dependency>
        <dependency>
        	<groupId>de.mpg.escidoc.services.wildfly</groupId>
        	<artifactId>search</artifactId>
        	<type>ejb</type>
        </dependency>
        <dependency>
        	<groupId>de.mpg.escidoc.services.wildfly</groupId>
        	<artifactId>structuredexportmanager</artifactId>
        	<type>ejb</type>
        </dependency>
        <dependency>
        	<groupId>de.mpg.escidoc.services.wildfly</groupId>
        	<artifactId>citationmanager</artifactId>
        	<type>ejb</type>
        </dependency>
        <dependency>
			<groupId>de.mpg.escidoc.services.wildfly</groupId>
			<artifactId>citation_style_language_manager</artifactId>
			<type>ejb</type>
		</dependency>
		<!--  
        <dependency>
        	<groupId>jasperreports</groupId>
        	<artifactId>jasperreports</artifactId>
        	<version>3.5.1</version>
        </dependency>
        -->
        <dependency>
        	<groupId>org.dspace</groupId>
        	<artifactId>cql-java</artifactId>
        	<version>1.3</version>
        </dependency>
        <dependency>
        	<groupId>wss4j</groupId>
        	<artifactId>wss4j</artifactId>
        	<version>1.5.1</version>
        </dependency>
	    <dependency>
	      	<groupId>com.maxmind.geoip</groupId>
	      	<artifactId>geoip</artifactId>
	      	<version>1.2.3</version>
    	</dependency>
    </dependencies>
</project>
