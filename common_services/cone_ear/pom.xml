<?xml version="1.0" encoding="UTF-8"?>
<!--

 CDDL HEADER START

 The contents of this file are subject to the terms of the
 Common Development and Distribution License, Version 1.0 only
 (the "License"). You may not use this file except in compliance
 with the License.

 You can obtain a copy of the license at license/ESCIDOC.LICENSE
 or http://www.escidoc.org/license.
 See the License for the specific language governing permissions
 and limitations under the License.

 When distributing Covered Code, include this CDDL HEADER in each
 file and include the License file at license/ESCIDOC.LICENSE.
 If applicable, add the following below this CDDL HEADER, with the
 fields enclosed by brackets "[]" replaced with your own identifying
 information: Portions Copyright [yyyy] [name of copyright owner]

 CDDL HEADER END


 Copyright 2006-2012 Fachinformationszentrum Karlsruhe Gesellschaft
 für wissenschaftlich-technische Information mbH and Max-Planck-
 Gesellschaft zur Förderung der Wissenschaft e.V.
 All rights reserved. Use is subject to license terms.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<groupId>de.mpg.escidoc.services.wildfly</groupId>
		<artifactId>pubman</artifactId>
		<version>7.13.0</version>
		<relativePath>../../pom.xml</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.mpg.escidoc.services.wildfly</groupId>
	<artifactId>cone_ear</artifactId>
	<name>cone_ear</name>
	<packaging>ear</packaging>
	<version>1.2.60</version>
	
	<scm>
		<connection>scm:git:git@github.com:MPDL/PubMan/common_services/cone_ear</connection>
		<developerConnection>scm:git:git@github.com:MPDL/PubMan/common_services/cone_ear</developerConnection>
		<url>https://github.com/MPDL/PubMan/</url>
	  <tag>pubman-7.13.0</tag>
  </scm>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-ear-plugin</artifactId>
				<configuration>
					<displayName>cone</displayName>
					<description>CONE</description>
					<version>6</version>
					<earSourceDirectory>target/classes/in_ear</earSourceDirectory>
					<defaultLibBundleDir>lib</defaultLibBundleDir>
					<archive>
						<manifestEntries>
							<Dependencies>pubman</Dependencies>
						</manifestEntries>
					</archive>
					<modules>
						<webModule>
							<groupId>de.mpg.escidoc.services.wildfly</groupId>
							<artifactId>cone_presentation</artifactId>
							<contextRoot>/cone</contextRoot>
						</webModule>
						<webModule>
							<groupId>de.mpg.escidoc.services.wildfly</groupId>
							<artifactId>common_presentation</artifactId>
							<contextRoot>/common</contextRoot>
						</webModule>
						<webModule>
							<groupId>de.mpg.escidoc.services.wildfly</groupId>
							<artifactId>aa_presentation</artifactId>
							<contextRoot>/auth</contextRoot>
						</webModule>
						<ejbModule>
							<groupId>de.mpg.escidoc.services.wildfly</groupId>
							<artifactId>common_logic</artifactId>
						</ejbModule>
					</modules>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- wait 30 seconds before starting integration tests. Workaround for cargo-maven2-plugin until wildfly has finished deploying -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>wait-for-deployment</id>
						<phase>integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<echo message="Sleeping for 30 seconds to wait for wildfly deployment" />
								<sleep seconds="30" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<test>RetrieveTest</test>								
							<argLine>${jacoco.arguments.it}</argLine>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- enables the process test resources feature in the ear -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testResources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>de.mpg.escidoc.services.wildfly</groupId>
			<artifactId>common_logic</artifactId>
			<scope>compile</scope>
			<type>ejb</type>
		</dependency>
		<dependency>
			<groupId>net.sf.saxon</groupId>
			<artifactId>saxon</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>de.mpg.escidoc.services.wildfly</groupId>
			<artifactId>cone_presentation</artifactId>
			<scope>compile</scope>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>de.mpg.escidoc.services.wildfly</groupId>
			<artifactId>framework_access</artifactId>
			<scope>compile</scope>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>axis</groupId>
			<artifactId>axis</artifactId>
			<version>1.4</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javabib</groupId>
			<artifactId>javabib</artifactId>
			<version>20040801</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.mulgara</groupId>
			<artifactId>itql</artifactId>
			<version>2.0-beta</version>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>richfaces</groupId>
			<artifactId>richfaces-api</artifactId>
			<version>3.1.4</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>richfaces</groupId>
			<artifactId>richfaces-impl</artifactId>
			<version>3.1.4</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>richfaces</groupId>
			<artifactId>richfaces-ui</artifactId>
			<version>3.1.4</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>jsf-facelets</groupId>
			<artifactId>jsf-facelets</artifactId>
			<version>1.1.13</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>urlrewrite</groupId>
			<artifactId>urlrewrite</artifactId>
			<version>3.1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-discovery</groupId>
			<artifactId>commons-discovery</artifactId>
			<version>0.2</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>de.mpg.escidoc.services.wildfly</groupId>
			<artifactId>cone</artifactId>
		</dependency>
		<dependency>
			<groupId>com.maxmind.geoip</groupId>
			<artifactId>geoip</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
			<groupId>wss4j</groupId>
			<artifactId>wss4j</artifactId>
			<version>1.5.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>de.mpg.escidoc.services.wildfly</groupId>
			<artifactId>common_presentation</artifactId>
			<type>war</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>de.mpg.escidoc.services.wildfly</groupId>
			<artifactId>aa_logic</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>de.mpg.escidoc.services.wildfly</groupId>
			<artifactId>aa_presentation</artifactId>
			<type>war</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
		  	<groupId>org.apache.commons</groupId>
  			<artifactId>commons-lang3</artifactId>
  			<scope>compile</scope>
  		</dependency>
	</dependencies>
	
	<profiles>		
		<profile>
			<id>integration-tests</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<executions>
							<execution>
								<id>start-container</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop-container</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<container>
								<containerId>wildfly8x</containerId>
								<zipUrlInstaller>
									<url>${cargo.jboss.url}</url>
									<downloadDir>${cargo.install.dir}</downloadDir>
									<extractDir>${cargo.install.dir}</extractDir>
								</zipUrlInstaller>
							</container>
							<!-- 
							<configuration>
								<type>existing</type>
								<home>${project.build.directory}/jboss/server</home>
								<properties>
									<cargo.servlet.port>${cargo.port}</cargo.servlet.port>
									<cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>
									<cargo.logging>${cargo.log}</cargo.logging>
									<cargo.jvmargs>${cargo.jvmargs}</cargo.jvmargs>
									<cargo.jboss.configuration>default</cargo.jboss.configuration>
								</properties>
							</configuration>
							-->
						</configuration>
						
					</plugin>
					<!-- 
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>jboss-maven-plugin</artifactId>
						<configuration>
							<jbossHome>${jboss.install.dir}</jbossHome>
							<hostName>${jboss.deploy.host}</hostName>
							<port>${jboss.deploy.port}</port>
						</configuration>
					</plugin>
					-->
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-deployment</id>
								<phase>generate-test-sources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete dir="${cargo.jboss.install.dir}/modules/pubman" />
										<copy overwrite="true" file="${project.build.directory}/classes/module.xml" todir="${cargo.jboss.install.dir}/modules/pubman/main" />
										<copy overwrite="true" file="${project.build.directory}/classes/cone.properties" todir="${cargo.jboss.install.dir}/modules/pubman/main" />
										<copy overwrite="true" file="${project.build.directory}/classes/in_ear/solution.properties" todir="${cargo.jboss.install.dir}/modules/pubman/main" />
										<copy overwrite="true" file="${project.build.directory}/classes/auth.properties" todir="${cargo.jboss.install.dir}/modules/pubman/main" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<dependencyManagement>
		<dependencies />
	</dependencyManagement>
</project>